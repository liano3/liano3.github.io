<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LN-Blog</title>
  
  <subtitle>永不停步</subtitle>
  <link href="https://liano.top/atom.xml" rel="self"/>
  
  <link href="https://liano.top/"/>
  <updated>2022-08-15T00:51:12.193Z</updated>
  <id>https://liano.top/</id>
  
  <author>
    <name>凝理</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>论如何优雅地写博客</title>
    <link href="https://liano.top/posts/0/"/>
    <id>https://liano.top/posts/0/</id>
    <published>2022-08-14T08:18:52.953Z</published>
    <updated>2022-08-15T00:51:12.193Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>花费了零零碎碎将近三天来搭建并美化个人博客网站，不好好写东西都对不起自己😉，本篇介绍如何优雅地写博客，主要内容分为三部分，一是如何发布博客，二是如何优雅地使用latex公式，三是如何优雅地插入图片。</p><h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><blockquote><p>问：如何发布博客？</p><p>答：将要上传的 md 文档放入&#x2F;source&#x2F;_posts中，素质三连 <code>git clean</code>,<code>git g</code>,<code>git d</code> 即可</p></blockquote><p>要上传的 md 文档前面的 front-matter 部分写上 title，categories，tags 等文章信息，具体可以写哪些信息详见上一篇。</p><p>进入源码模式，格式如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 论如何优雅地写博客</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> 使用技巧</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">-</span> Typora</span><br><span class="line"><span class="bullet">-</span> PicGo</span><br><span class="line"><span class="bullet">-</span> SM.MS图床</span><br><span class="line"><span class="bullet">-</span> hexo</span><br><span class="line"><span class="section">- 写博客</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="latex公式"><a href="#latex公式" class="headerlink" title="latex公式"></a>latex公式</h2><p>众所周知，Typora 以其出色的即时预览功能和对 latex 公式的支持广受欢迎，虽然现在付费了，但还是可以想办法白嫖的，<a href="https://github.com/ningli03/typora_theme">方法在这</a>，里面还附赠了一套来自 op 的精美主题。</p><p>但是，当我将用 Typora 写的文档放入博客中时，问题出现了！里面的 latex 公式都寄了！下面讲解解决方法：</p><h3 id="更换插件"><a href="#更换插件" class="headerlink" title="更换插件"></a>更换插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><h3 id="更改插件文件"><a href="#更改插件文件" class="headerlink" title="更改插件文件"></a>更改插件文件</h3><p>进入项目更目录下：<code>node_modules\kramed\lib\rules\inline.js</code></p><p>修改这么两行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- <span class="attr">escape</span>: <span class="regexp">/^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/</span>,</span><br><span class="line">+ <span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span></span><br><span class="line">- <span class="attr">em</span>: <span class="regexp">/^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br><span class="line">+ <span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span></span><br></pre></td></tr></table></figure><p>分别在第 11 行和 20 行左右，减号后面是删掉的内容，加号后面是要加上的内容</p><h3 id="配置主题文件"><a href="#配置主题文件" class="headerlink" title="配置主题文件"></a>配置主题文件</h3><p>_config.butterfly.yml 中更改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="更改部分语法"><a href="#更改部分语法" class="headerlink" title="更改部分语法"></a>更改部分语法</h3><p>如果上述操作全部完成，还是不能成功，看看有没有语法问题。</p><p>比如，如果在公式内连续使用两个花括号，必须加上空格。</p><p>如下面的会渲染失败。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$L_p  = (\sum_&#123;i=1&#125;^m |x_i - y_i |^&#123;p&#125;  )^&#123;&#123;\tfrac&#123;1&#125;&#123;p&#125;&#125;&#125;$$</span><br></pre></td></tr></table></figure><p>在连续的花括号之间加上空格即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$L_p  = (\sum_&#123;i=1&#125;^m |x_i - y_i |^&#123;p&#125;  )^&#123; &#123;\tfrac&#123;1&#125; &#123;p&#125; &#125; &#125;$$</span><br></pre></td></tr></table></figure><h2 id="图床搭建"><a href="#图床搭建" class="headerlink" title="图床搭建"></a>图床搭建</h2><p>个人博客不能没有图床，就像西方不能没有耶路撒冷🤣，总之一个图床工具还是非常有用的，首先是无论是 github pages 还是 gitee pages 都是有 1G 的容量限制的，图片传多了就寄了。另外，图床可以实现跨平台跨设备使用同一张图片，分享或上传 md 文档再也不用连带着图片文件夹压缩了。</p><p>本着白嫖精神，并考虑到 github 访问速度慢，gitee 禁止外链，我选择 SM.MS 图床配合 PicGo 工具。SM.MS图床免费用户有 5G 容量（再多点就好了😊)，访问速度还可以。下面介绍如何配置：</p><h3 id="下载PicGo"><a href="#下载PicGo" class="headerlink" title="下载PicGo"></a>下载PicGo</h3><p><a href="https://github.com/Molunerfinn/PicGo/releases">网址在这</a>，向下翻，下载 2.3.0 版本，如下图：</p><img src="https://s2.loli.net/2022/08/14/7vVblZ2Ijcp5mxO.png" alt="image-20220814215545932" style="zoom: 67%;" /><p>下载完成后双击即可安装。</p><h3 id="配置SM-MS"><a href="#配置SM-MS" class="headerlink" title="配置SM.MS"></a>配置SM.MS</h3><p><a href="https://sm.ms/">网址在这</a>，注册登录后点击菜单栏的 user -&gt; DashBoard</p><img src="https://s2.loli.net/2022/08/14/9x3IEp8Cf1P2biz.png" alt="Snipaste_2022-08-14_22-03-11" style="zoom:67%;" /><p>点击 API Token，复制 Secret Token 的内容，如果为空就点击下面的 Generate</p><img src="https://s2.loli.net/2022/08/14/olSEtRNqg6aXhbw.png" alt="Snipaste_2022-08-14_22-07-14" style="zoom:67%;" /><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><p>打开 PicGo，配置 token，即把刚才复制的内容放进来</p><blockquote><p>注意：PicGo 双击打开可能没反应，实际在任务栏可以看到</p></blockquote><img src="https://s2.loli.net/2022/08/14/f2vbSonTrl4JAGt.png" alt="Snipaste_2022-08-14_22-10-57" style="zoom:67%;" /><h3 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a>配置Typora</h3><p>文件 -&gt; 偏好设置 -&gt; 图像，配置如下：</p><img src="https://s2.loli.net/2022/08/14/LZhqWcoHMm3iABl.png" alt="Snipaste_2022-08-14_22-17-01" style="zoom:67%;" /><p>重启 Typora，即可优雅地写博客。</p><blockquote><p>注意：最后的验证可能不成功，重启之后新建一个 md 文档试试，如果能上传，就不用管</p></blockquote><p>另外，推荐一个截图工具 snipaste，超级好用！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;花费了零零碎碎将近三天来搭建并美化个人博客网站，不好好写东西都对不起自己😉，本篇介绍如何优雅地写博客，主要内容分为三部分，一是如何发布博客</summary>
      
    
    
    
    <category term="使用技巧" scheme="https://liano.top/categories/%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="hexo" scheme="https://liano.top/tags/hexo/"/>
    
    <category term="Typora" scheme="https://liano.top/tags/Typora/"/>
    
    <category term="PicGo" scheme="https://liano.top/tags/PicGo/"/>
    
    <category term="SM.MS图床" scheme="https://liano.top/tags/SM-MS%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="写博客" scheme="https://liano.top/tags/%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客（三）主题配置</title>
    <link href="https://liano.top/posts/476e1d48/"/>
    <id>https://liano.top/posts/476e1d48/</id>
    <published>2022-08-12T12:43:49.187Z</published>
    <updated>2022-08-14T07:32:58.679Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有一个自己的博客还不够优雅，搭配上一个酷炫的主题才能更优雅地书写，本文以 butterfly主题为基础，谈谈博客界面的美化与功能细节的添加</p><h2 id="应用butterfly主题"><a href="#应用butterfly主题" class="headerlink" title="应用butterfly主题"></a>应用butterfly主题</h2><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>在hexo根目录里打开gitbash，输入如下命令：</p><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code></p><p>成功后如图所示：</p><img src="https://s2.loli.net/2022/08/14/8vnQBeaSTY1FKD7.png" alt="image-20220812205140208" style="zoom:67%;" /><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>然后进入根目录里的_config.yml文件，将主题改为butterfly:</p><img src="https://s2.loli.net/2022/08/14/p2FHgXciI1qaeBk.png" alt="image-20220812205422129" style="zoom:67%;" /><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>如果你没有 pug 以及 stylus 的渲染器，请下载安装：</p><img src="https://s2.loli.net/2022/08/14/GqsVtvJZd9RXhkb.png" alt="image-20220812205725232" style="zoom:67%;" /><h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><p>在根目录创建一个名为 <code>_config.butterfly.yml</code> 的文件，将<strong>butterfly主题目录里的</strong>文件_config.yml内容复制到新建的文件中，以后更改配置时在新建的这个文件里更改，因为解析时新建的这个文件优先级高，这样既可以有效修改配置，又避免升级主题时数据丢失。</p><img src="https://s2.loli.net/2022/08/14/i2BdMIhmT9F7gQq.png" style="zoom:67%;" /><p>注意：原来的文件不要删除</p><h2 id="网页功能配置"><a href="#网页功能配置" class="headerlink" title="网页功能配置"></a>网页功能配置</h2><h3 id="front-matter"><a href="#front-matter" class="headerlink" title="front-matter"></a>front-matter</h3><p>首先介绍一下 front-matter，顾名思义，是在md文档中最前面，以—为分界线，用于指定参数或变量的部分</p><h4 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h4><p>相关参数如下表：</p><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>[必需]页面标题</td></tr><tr><td>date</td><td>[必需]页面创建日期</td></tr><tr><td>type</td><td>[必需]标签、分类和友链三个页面需要</td></tr><tr><td>updated</td><td>页面更新日期</td></tr><tr><td>comments</td><td>显示评论模块</td></tr><tr><td>top_img</td><td>页面顶部图片</td></tr><tr><td>mathjax</td><td>per_page:false时才需要配置</td></tr></tbody></table><h4 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h4><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>[必需]文章标题</td></tr><tr><td>date</td><td>[必需]创建日期</td></tr><tr><td>updated</td><td>更新日期</td></tr><tr><td>tags</td><td>标签</td></tr><tr><td>categories</td><td>文章分类</td></tr><tr><td>cover</td><td>文章缩略图</td></tr><tr><td>mathjax</td><td>per_page:false时才需要配置</td></tr></tbody></table><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>首先进入主题配置文件_config.butterfly.yml，更改如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#菜单栏</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-folder-open</span></span><br></pre></td></tr></table></figure><p>根据自己情况，还可以再加，我只创建了这几个页面。</p><p>然后前往你的 Hexo 博客的根目录，输入 <code>hexo new page tags</code>，你会找到source&#x2F;tags&#x2F;index.md这个文件，修改这个文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-08-11 19:27:10</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="string">/img/page.png</span>  <span class="comment">#自己根据你想设置的图片的位置修改</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>分类页操作步骤同上，把命令改为 <code>hexo new page categories</code> 即可</p><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2><p>东西太多了，写不下去了，关于主题方面的配置，官方文档里写的比我清晰多了，自己看去吧：<a href="https://butterfly.js.org/">地址在这</a> （我好懒🤣</p><p>另外，官方文档的图片显示需要梯子，推荐greenhub，免费好用</p><p>下一篇更如何与typora，picgo，smms图床结合，提升书写体验，敬请期待~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;有一个自己的博客还不够优雅，搭配上一个酷炫的主题才能更优雅地书写，本文以 butterfly主题为基础，谈谈博客界面的美化与功能细节的添加&lt;</summary>
      
    
    
    
    <category term="网页制作" scheme="https://liano.top/categories/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
    
    <category term="自建博客" scheme="https://liano.top/tags/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://liano.top/tags/hexo/"/>
    
    <category term="github" scheme="https://liano.top/tags/github/"/>
    
    <category term="网页制作" scheme="https://liano.top/tags/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客（二）node.js与hexo</title>
    <link href="https://liano.top/posts/fd836635/"/>
    <id>https://liano.top/posts/fd836635/</id>
    <published>2022-08-12T12:32:17.387Z</published>
    <updated>2022-08-14T07:21:35.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="node-js与hexo"><a href="#node-js与hexo" class="headerlink" title="node.js与hexo"></a>node.js与hexo</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p><a href="https://nodejs.org/en/">网址在这</a>，下载左边那个版本</p><img src="https://s2.loli.net/2022/08/14/b75yF3ReITtBDXM.png" alt="image-20220812163919844" style="zoom:67%;" /><p>完成后双击安装，一路 next 即可（可以更改安装地址）</p><p><strong>测试：</strong></p><p>win+R 打开 cmd，输入 <code>node -v</code> 和 <code>npm -v</code>，检查版本</p><img src="https://s2.loli.net/2022/08/14/QoERV7q5nIG9Nlg.png" alt="image-20220812164420495" style="zoom:67%;" /><h3 id="修改路径"><a href="#修改路径" class="headerlink" title="修改路径"></a>修改路径</h3><p>因为如果不设置的话，安装模块的时候就会把模块装到C盘，占用C盘的空间，并且有可能安装好hexo后却无法使用，所以我们需要设置一下：</p><p>在 nodejs 文件夹中新建两个空文件夹 node_cache、node_global，</p><img src="https://s2.loli.net/2022/08/14/oxhq8bt25QPBGJK.png" alt="image-20220812164913897" style="zoom:67%;" /><p>打开cmd，输入如下两个命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;E:\nodejs\node_global&quot; //根据自己地址改</span><br><span class="line">npm config set cache &quot;E:\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/08/14/SwMeVBIocqPlaGu.png" alt="image-20220812165204841" style="zoom:67%;" /><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>win11系统 -&gt; 我的电脑 -&gt; 右键属性 -&gt; 高级系统设置 -&gt; 环境变量</p><p>然后在系统变量中新建一个变量名为“NODE_PATH”，值为“E:\nodejs\node_global\node_modules”</p><img src="https://s2.loli.net/2022/08/14/EK23wAF96tnjuHh.png" alt="image-20220812165839664" style="zoom:67%;" /><p>然后编辑用户变量里的Path，将相应npm的路径改为：E:\nodejs\node_global，</p><img src="https://s2.loli.net/2022/08/14/LCJXyDmVdlcaoE6.png" alt="image-20220812170024835" style="zoom:67%;" /><p>一定要在改完后一路点确定到最后，不然保存不上</p><p><strong>测试：</strong></p><p>在 cmd 命令下执行 <code>npm install webpack -g</code>，然后 webpack 这个模块已经在我们设置默认的文件夹中了：</p><img src="https://s2.loli.net/2022/08/14/rlQ126mTcgdhCKX.png" alt="image-20220812170309019" style="zoom:67%;" /><h3 id="创建Github-Pages"><a href="#创建Github-Pages" class="headerlink" title="创建Github Pages"></a>创建Github Pages</h3><p>Hexo就是我们的个人博客网站的框架，在安装之前，我们要先在GitHub上创立一个仓库，名字必须为<code>username.github.io</code>（如果名字里有大写字母，要变成小写）如下图：</p><img src="https://s2.loli.net/2022/08/14/ZWbfCiL86hkMdEt.png" alt="image-20220812170745125" style="zoom:67%;" /><p>仓库一定要是 public 的</p><p>然后点击 settings -&gt; pages，出现下图所示就对了</p><img src="https://s2.loli.net/2022/08/14/uJSt5OkYU2cQi1N.jpg" alt="v2-6a000b836ae32c3d118c1fdeb4696f1c_r" style="zoom:67%;" /><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>首先新建立一个文件夹 Blog（博客相关东西的本地存放点，设在你想设的位置），点开 Blog 文件夹，在该文件夹内鼠标右键打开 Git Bush Here，输入npm命令 <code>npm install -g hexo-cli</code> 安装Hexo</p><p>安装完成后，输入 <code>hexo init</code> 命令初始化博客</p><p>然后输入 <code>hexo g</code> 静态部署</p><p>这时网页已经在本地部署完成，输入 <code>hexo s</code> 命令可以查看：</p><img src="https://s2.loli.net/2022/08/14/7XM9paWcfTVDUy8.png" alt="v2-11a0b4917c962bab07a48f7a04160e8b_r" style="zoom:67%;" /><p>浏览器网址栏输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以打开新部署的网页</p><p>看完后 ctr+C 停止运行服务器</p><h3 id="将-hexo-部署到-github"><a href="#将-hexo-部署到-github" class="headerlink" title="将 hexo 部署到 github"></a>将 hexo 部署到 github</h3><p>现在回到我们的 Blog 文件夹，用记事本打开 _config.yml 文件，如下图：</p><img src="https://s2.loli.net/2022/08/14/DwjKrdA6sOuiZxz.png" alt="image-20220812172036226" style="zoom:67%;" /><p>下滑到文件底部，补全为以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/ningli03/ningli03.github.io.git  #你的仓库地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>然后回到 Blog 文件夹中，打开 Git Bash，安装Git部署插件，输入命令：<code>npm install hexo-deployer-git --save</code> ，然后分别输入以下三条命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p>完成以后，打开浏览器，输入 <a href="https://yourname.github.io/">https://yourname.github.io</a> 就可以打开你的网页了</p><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;node-js与hexo&quot;&gt;&lt;a href=&quot;#node-js与hexo&quot; class=&quot;headerlink&quot; title=&quot;node.js与hexo&quot;&gt;&lt;/a&gt;node.js与hexo&lt;/h2&gt;&lt;h3 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装no</summary>
      
    
    
    
    <category term="网页制作" scheme="https://liano.top/categories/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
    
    <category term="自建博客" scheme="https://liano.top/tags/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://liano.top/tags/hexo/"/>
    
    <category term="github" scheme="https://liano.top/tags/github/"/>
    
    <category term="网页制作" scheme="https://liano.top/tags/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建个人博客（一）git与github</title>
    <link href="https://liano.top/posts/9b7b26aa/"/>
    <id>https://liano.top/posts/9b7b26aa/</id>
    <published>2022-08-12T12:32:17.386Z</published>
    <updated>2022-08-14T07:08:08.795Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>问：搭建个人博客需要什么呢？</p><p>答：只需要耐心</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>你需要在遇到问题时自己去网上查找答案，有时候一个问题就要查半天，最后还有可能没解决，目前网上的教程大都时间较长远了，操作起来会遇到各种问题，故做此教程以给新手避坑。</p><h2 id="github与git"><a href="#github与git" class="headerlink" title="github与git"></a>github与git</h2><h3 id="注册github"><a href="#注册github" class="headerlink" title="注册github"></a>注册github</h3><p>很简单，需要一个电子邮箱，注册个人免费版即可，<a href="https://github.com/">网址在这</a>，略</p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><a href="https://git-scm.com/">网址在这</a></p><p>点击 downloads -&gt; 选择系统 -&gt; 下载 -&gt; 一路next(可以更换安装地址) -&gt; 安装成功！</p><img src="https://s2.loli.net/2022/08/14/3ZsjkQd7MJcqIhE.png" alt="image-20220812083541223" style="zoom:67%;" /><p><strong>测试：</strong></p><p>右键，点击 Git Bash Here，输入 <code>git</code>，回车</p><img src="https://s2.loli.net/2022/08/14/RjNagtnJV8wLfiS.png" alt="image-20220812083839208" style="zoom:67%;" /><h3 id="绑定git与github"><a href="#绑定git与github" class="headerlink" title="绑定git与github"></a>绑定git与github</h3><p>首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH，我们右键打开 Git Bash，输入 <code>ssh</code>，回车</p><img src="https://s2.loli.net/2022/08/14/nhBDEt6f2LbNpiJ.png" alt="image-20220812084617665" style="zoom:67%;" /><p>然后，输入 <code>ssh-keygen -t rsa</code> 命令（注意空格），表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub（**注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert.**）文件的位置在 Git Bash 上面都有显示</p><p>接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容，你可以通过目录找到 id_rsa.pub 文件的位置，用记事本打开文件复制。如果你实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh </span><br><span class="line">$ ls</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure><img src="https://s2.loli.net/2022/08/14/cTG7hXxdJl9nCqp.png" alt="image-20220812085712963" style="zoom:67%;" /><p>复制是 ctrl+insert 哦，别搞错了</p><p>接下来进入我们的 GitHub 主页，先点击右上角，再点击 settings，然后 SSH and GPG keys，最后 New SSH key，将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 Add SSH key</p><img src="https://s2.loli.net/2022/08/14/OonHgKvaTq3GF8U.png" alt="image-20220812091931406" style="zoom: 50%;" /><p><strong>测试：</strong></p><p>右键打开gitbash，输入 <code>ssh -T git@github.com</code>，回车，可能会出现这种情况，输入 <code>yes</code> 即可</p><img src="https://s2.loli.net/2022/08/14/NOBCy9VvIU7FqHS.png" alt="v2-5b4f05ea2e2a7fb8b13fd35a9bafa8ce_720w" style="zoom:80%;" /><img src="https://s2.loli.net/2022/08/14/a3OmsiLPvKW42J9.png" alt="image-20220812092527889" style="zoom:80%;" /><h3 id="尝试提交文件"><a href="#尝试提交文件" class="headerlink" title="尝试提交文件"></a>尝试提交文件</h3><blockquote><p>这一步只是测试，跟着步骤做完后可以把本地仓库和上传上去的文件删掉</p></blockquote><p>首先通过 github 建立一个仓库，复制仓库地址</p><img src="https://s2.loli.net/2022/08/14/tzYluDygFwdUfQs.png" alt="image-20220812093105108" style="zoom: 50%;" /><p>在桌面右键打开 gitbash，输入 <code>git clone ...(刚复制的地址)</code>，将远程仓库 clone 到本地</p><img src="https://s2.loli.net/2022/08/14/DUIn3odGj7uvEzb.png" alt="image-20220812093535381" style="zoom: 67%;" /><p>现在我们在刚才克隆下来的文件夹里创建一个 text.txt 测试文件，在这个文件夹里右键打开 gitbash，我们使用 <code>git add</code> 命令将文件添加到了「临时缓冲区」，再用 <code>git commit -m &quot;提交信息&quot;</code> 将其提交到本地仓库</p><img src="https://s2.loli.net/2022/08/14/4juhNM6YrHTUc7C.png" alt="image-20220812094332129" style="zoom:67%;" /><p>如果你是第一次提交的话，会让你输入用户名和邮箱：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#你只要再加两行代码就行：</span><br><span class="line">$ git config --global user.name<span class="string">&quot;your name&quot;</span></span><br><span class="line">$ git config --global user.email<span class="string">&quot;your email&quot;</span></span><br></pre></td></tr></table></figure><p>现在输入 <code>git push origin main</code> 命令，将本地仓库提交到远程仓库，origin是远程主机的名字：</p><img src="https://s2.loli.net/2022/08/14/j9XGc8nNkEyoUvS.png" alt="image-20220812094626288" style="zoom:67%;" /><p>第一次上传需要输入密码，上传成功后刷新github远程仓库页面，可以看到被提交上去的test.txt</p><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;问：搭建个人博客需要什么呢？&lt;/p&gt;
&lt;p&gt;答：只需要耐心&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;你需要在遇到</summary>
      
    
    
    
    <category term="网页制作" scheme="https://liano.top/categories/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
    
    <category term="自建博客" scheme="https://liano.top/tags/%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="hexo" scheme="https://liano.top/tags/hexo/"/>
    
    <category term="github" scheme="https://liano.top/tags/github/"/>
    
    <category term="网页制作" scheme="https://liano.top/tags/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://liano.top/posts/4a17b156/"/>
    <id>https://liano.top/posts/4a17b156/</id>
    <published>2022-08-12T12:32:17.384Z</published>
    <updated>2022-08-13T10:14:59.484Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
